@baseUrl = http://localhost:8080
@clientId = 1

### ⭐ INIT: initialize eHealth doc workflow, generate prescription & requisition if not exist
POST {{baseUrl}}/api/ehealth/init?clientId={{clientId}}
Accept: application/json

> {%
    client.test("INIT: 200 OK", function() {
        client.assert(response.status === 200, "Unexpected status: " + response.status);
    });
    const initBody = response.body;
    client.assert(!!initBody.client, "client should be present");
%}

###

### ⭐ GET_DOCUMENTS: get existing prescription & requisition
GET {{baseUrl}}/api/ehealth/documents?clientId={{clientId}}
Accept: application/json

> {%
    client.test("GET_DOCUMENTS: 200 OK", function() {
        client.assert(response.status === 200, "Unexpected status: " + response.status);
    });
    const docsBody = response.body;
    client.assert(docsBody.prescription || docsBody.requisition, "documents should exist");
%}

###

### ⭐ FIND_NEARBY: find nearby pharmacies and labs
### https://localhost:8080/api/ehealth/nearby?clientId=1
GET {{baseUrl}}/api/ehealth/nearby?clientId={{clientId}}
Accept: application/json

> {%
    client.test("FIND_NEARBY: 200 OK", function() {
        client.assert(response.status === 200, "Unexpected status: " + response.status);
    });
    const nearbyBody = response.body;
    client.assert(Array.isArray(nearbyBody.pharmacies) && nearbyBody.pharmacies.length > 0, "pharmacies should not be empty");
    client.assert(Array.isArray(nearbyBody.labs) && nearbyBody.labs.length > 0, "labs should not be empty");
%}

###

### ⭐ SAVE_SELECTION: save selected pharmacy and lab
POST {{baseUrl}}/api/ehealth/selection
Content-Type: application/json
Accept: application/json

{
  "clientId": {{clientId}},
  "pharmacyName": "同仁堂",
  "pharmacyAddress": "合肥市庐阳区",
  "labName": "第一人民医院",
  "labAddress": "合肥市蜀山区"
}

> {%
    client.test("SAVE_SELECTION: 200 OK", function() {
        client.assert(response.status === 200, "Unexpected status: " + response.status);
    });
    const selBody = response.body;
    client.assert(selBody.prescription && selBody.requisition, "documents should be present after save");
    // 直接与固定值断言
    client.assert(selBody.prescription.pharmacyName === "同仁堂", "pharmacyName not saved");
    client.assert(selBody.prescription.pharmacyAddress === "合肥市庐阳区", "pharmacyAddress not saved");
    client.assert(selBody.requisition.labName === "第一人民医院", "labName not saved");
    client.assert(selBody.requisition.labAddress === "合肥市蜀山区", "labAddress not saved");
%}

###

### ⭐ SEND_FAX: send fax to selected pharmacy and lab and show the result
POST {{baseUrl}}/api/ehealth/send-fax?clientId={{clientId}}
Accept: application/json

> {%
    client.test("SEND_FAX: 200 OK", function() {
        client.assert(response.status === 200, "Unexpected status: " + response.status);
    });
    const faxBody = response.body;
    client.assert(!!faxBody.success, "fax should be successful");
    client.assert(typeof faxBody.message === "string" && faxBody.message.length > 0, "message should be present");
%}

###

### NEGATIVE: INIT without clientId should return 400 BAD_REQUEST
POST {{baseUrl}}/api/ehealth/init
Accept: application/json

> {%
    client.test("INIT without clientId: 400 BAD_REQUEST", function() {
        client.assert(response.status === 400, "Expected 400, got: " + response.status);
    });
%}
